{"version":3,"sources":["main.js"],"names":["$tableContainer","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","render","remove","forEach","node","index","$li","simplifyUrl","insertBefore","on","window","open","e","stopPropagation","splice","replace","prompt","indexOf","push","toUpperCase","logoType","onbeforeunload","string","stringify","setItem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,kBAAkBC,EAAE,iBAAF,CAAxB;AACA,IAAMC,UAAUF,gBAAgBG,IAAhB,CAAqB,OAArB,CAAhB;AACA;AACA;AACA,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV;AACA,IAAMC,UAAUC,KAAKC,KAAL,CAAWL,CAAX,CAAhB;;AAEA;AACA;AACA,IAAMM,UAAUH,WAAW,CACzB,EAAEI,MAAM,GAAR,EAAaC,KAAK,sBAAlB,EADyB,EAEzB,EAAED,MAAM,GAAR,EAAaC,KAAK,sBAAlB,EAFyB,CAA3B;AAIA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AAOA;AACA;AACA,IAAMC,SAAS,SAATA,MAAS,GAAM;AACnBb,kBAAgBG,IAAhB,CAAqB,eAArB,EAAsCW,MAAtC;AACAJ,UAAQK,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/B,QAAMC,MAAMjB,oGAGoBe,KAAKL,IAHzB,oDAIoBQ,YAAYH,KAAKJ,GAAjB,CAJpB,oPAWCQ,YAXD,CAWclB,OAXd,CAAZ,CAD+B,CAYK;AACpC;AACAgB,QAAIG,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpB;AACAC,aAAOC,IAAP,CAAYP,KAAKJ,GAAjB;AACD,KAHD;AAIA;AACAM,QAAIG,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAA0B,UAACG,CAAD,EAAO;AAC/BA,QAAEC,eAAF;AACAf,cAAQgB,MAAR,CAAeT,KAAf,EAAsB,CAAtB;AACAJ;AACD,KAJD;AAKD,GAxBD;AAyBD,CA3BD;;AA6BA;AACA,IAAMM,cAAc,SAAdA,WAAc,CAACP,GAAD,EAAS;AAC3B,SAAOA,IACJe,OADI,CACI,SADJ,EACe,EADf,EAEJA,OAFI,CAEI,UAFJ,EAEgB,EAFhB,EAGJA,OAHI,CAGI,MAHJ,EAGY,EAHZ,EAIJA,OAJI,CAII,MAJJ,EAIY,EAJZ,CAAP;AAKD,CAND;;AAQA;AACA1B,EAAE,YAAF,EAAgBoB,EAAhB,CAAmB,OAAnB,EAA4B,UAACG,CAAD,EAAO;AACjCA,IAAEC,eAAF,GADiC,CACZ;AACrB,MAAIb,MAAMU,OAAOM,MAAP,CAAc,SAAd,CAAV;AACA,MAAIhB,IAAIiB,OAAJ,CAAY,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BjB,UAAM,YAAYA,GAAlB;AACD;;AAED;AACAF,UAAQoB,IAAR,CAAa;AACXnB,UAAMQ,YAAYP,GAAZ,EAAiB,CAAjB,EAAoBmB,WAApB,EADK;AAEXC,cAAU,MAFC;AAGXpB,SAAKA;AAHM,GAAb;AAKAC;AACD,CAdD;;AAgBAA;AACA;AACA;AACAS,OAAOW,cAAP,GAAwB,YAAM;AAC5B,MAAMC,SAAS1B,KAAK2B,SAAL,CAAezB,OAAf,CAAf;AACAL,eAAa+B,OAAb,CAAqB,GAArB,EAA0BF,MAA1B;AACD,CAHD","file":"main.16cd25cb.map","sourceRoot":"../src","sourcesContent":["const $tableContainer = $(\".tableContainer\");\nconst $lastLi = $tableContainer.find(\".last\");\n//step 6 把需要把setItem得到的字符串改为对象形式保存在数组内；\n//if判断object有没有参数，没有就设置默认值；也就是AB两个对象；\nconst x = localStorage.getItem(\"x\");\nconst xObject = JSON.parse(x);\n\n//设置默认初始值\n// step 1 : 声明一个数组， 用来添加所有用户输入的数据\nconst hashMap = xObject || [\n  { logo: \"A\", url: \"http://www.acfun.com\" },\n  { logo: \"B\", url: \"http://www.baidu.com\" },\n];\n/**\n * 1.给+号添加点击事件\n * 2.点击后弹出输入框\n * 3.接收用户的输入\n * 4.封装一个对象，存入数组\n * 4.1 localstorage加载数据（字符串）\n * 4.2 字符串变为JSON对象\n * 4.3 如果没有传默认值\n */\n\n// js对象 VS JSON 对象\n// let jsObject = {\n//   name: \"pp\",\n//   age: 17,\n// };\n\n// let jsonObj = {\n//   age: 1,\n//   name: \"pp\",\n// };\n\n/**\n * 处理数据\n * 1.遍历数组\n * 2.获取数组中的每一个元素\n * 3.根据元素里面的数据（logo,url,logoType）构建对象\n * 4.dom对象插入到浏览器对应的位置\n */\n//step 3 处理这些变量，并且创建一个对象，插入指定的位置。\n//将除了添加按钮的其他对象删除\nconst render = () => {\n  $tableContainer.find(\"li:not(.last)\").remove();\n  hashMap.forEach((node, index) => {\n    const $li = $(`\n        <li>\n            <div class=\"firstSecond\">\n                <div class=\"logo\">${node.logo}</div>\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\n                <div class=\"close\">\n                    <svg class=\"icon\"> \n                    <use xlink:href=\"#icon-close\">X</use>\n                    </svg>\n                </div>\n            </div>\n        </li>;`).insertBefore($lastLi); //需要申明lastLi变量\n    //step 7 添加click -- open监听事件 ，浏览器打开时传入node的URL值\n    $li.on(\"click\", () => {\n      debugger;\n      window.open(node.url);\n    });\n    // step 8 监听click -- close事件，点击X 可以关闭对象\n    $li.on(\"click\", \".close\", (e) => {\n      e.stopPropagation();\n      hashMap.splice(index, 1);\n      render();\n    });\n  });\n};\n\n// 接收一个格式是 http://fuck.com 的字符串作为参数\nconst simplifyUrl = (url) => {\n  return url\n    .replace(\"http://\", \"\")\n    .replace(\"https://\", \"\")\n    .replace(\"www.\", \"\")\n    .replace(/\\/.*/, \"\");\n};\n\n// step 2:  添加事件并规定开头格式，接收用户输入,指定格式。用户点击 + 号可以跳出输入框；\n$(\".addButton\").on(\"click\", (e) => {\n  e.stopPropagation(); //阻止冒泡，只能点击button才可以关闭 ；\n  let url = window.prompt(\"请输入你的网址\");\n  if (url.indexOf(\"http\") != 0) {\n    url = \"http://\" + url;\n  }\n\n  // step 4： 把参数传入hashmap变量并且返回数据。渲染数据\n  hashMap.push({\n    logo: simplifyUrl(url)[0].toUpperCase(),\n    logoType: \"text\",\n    url: url,\n  });\n  render();\n});\n\nrender();\n// step 5\n// 在window关闭的时候，保留数据至localStorage\nwindow.onbeforeunload = () => {\n  const string = JSON.stringify(hashMap);\n  localStorage.setItem(\"x\", string);\n};\n"]}